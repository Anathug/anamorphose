{"version":3,"sources":["css/cursor.scss","css/navigation.scss","css/variables.scss","node_modules/splitting/dist/splitting.css","node_modules/splitting/dist/splitting-cells.css","css/text.scss"],"names":[],"mappings":"AAAA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;;AAEE;EACE;EACA;EACA;EACA;EACA;;AAGJ;EACE;EACA;EACA;EACA;;AACA;EACE;;ACrBN;EACE;EACA;EACA;EACA,KCJM;EDKN,OCLM;EDMN,OCRM;;;ADWR;EACE;EACA;EACA,QCZM;EDaN,OCbM;EDcN;EACA;;AACA;EACE;EACA;EACA;;;AAIJ;EACE;EACA;EACA;EACA,QC3BM;ED4BN,MC5BM;ED6BN;EACA;EACA;;AACA;EACE;EACA;EACA;;;AAIJ;EACE;;;AAGF;EACE;IACG;IACC;;EAEJ;IACI;IACA;;;AAMF;EACE;EACA;;AAEF;EACE;EACA;;AAEF;EACE;EACA;;AAEF;EACE;EACA;;AAEF;EACE;EACA;;AE5EN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrDE;EACE,eAAA;EACA,YAAA;EACA,SHJI;EGKJ,UHLI;EGMJ,WAAA;EACA,aAAA;EACA,sBAAA;;AAEE;EACE,0DAAA;EACA,uDAAA;;AAGJ;EACE,cHlBE;;AGoBJ;EACE,mBAAA;EACA,eAAA;EACA,iBAAA;EACA,oBAAA;EACA,kBAAA;EACA,mBAAA;EACA,oBAAA;;AAEF;EACE,mDAAA;EACA,kBAAA;EACA,mBAAA;;AAEF;EACE,eAAA;EACA,iBAAA;EACA,kBAAA;;AAEF;EACE,0DAAA;EACA,wDAAA;;AAEF;EACE,uBAAA;;;AAMN;EACE;IACE,4BAAA;IACA,UAAA;;;AAIJ;EACE;IACE,UAAA","file":"anamorphose.e31bb0bc.css","sourceRoot":"..","sourcesContent":[".cursor {\n  position: fixed;\n  z-index: 100;\n  pointer-events: none;\n  height: 44px;\n  width: 44px;\n  top: 0;\n  left: 0;\n  &__circle {\n    circle {\n      stroke: white;\n      stroke-width: 1px;\n      fill: transparent;\n      stroke-dasharray: 500px;\n      stroke-dashoffset: 500px;\n    }\n  }\n  &__dot {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    circle {\n      fill: white;\n    }\n  }\n}\n","@import 'variables';\n\n.timer {\n  position: fixed;\n  z-index: 100;\n  pointer-events: none;\n  top: $marge;\n  right: $marge;\n  color: $white;\n}\n\n.photo {\n  position: absolute;\n  z-index: 100;\n  bottom: $marge;\n  right: $marge;\n  display: flex;\n  align-items: flex-end;\n  img {\n    width: 25px;\n    height: 25px;\n    transform: translateY(50%);\n  }\n}\n\n.music_button {\n  display: flex;\n  align-items: flex-end;\n  position: absolute;\n  bottom: $marge;\n  left: $marge;\n  z-index: 100;\n  padding-top: 20px;\n  padding-right: 20px;\n  span {\n    width: 2px;\n    margin-left: 5px;\n    background-color: white;\n  }\n}\n\n.music_button.play span {\n  animation: wave 0ms -800ms ease-in-out infinite alternate;\n}\n\n@keyframes wave {\n  0% {\n     opacity: .35;\n      height: 5px;\n  }\n  100% {\n      opacity: 1;\n      height: 20px;\n  }\n}\n\n.music_button {\n  span {\n    &:nth-child(1) {\n      height: 2px;\n      animation-duration: 874ms;\n    }\n    &:nth-child(2) {\n      height: 2px;\n      animation-duration: 833ms;\n    }\n    &:nth-child(3) {\n      height: 2px;\n      animation-duration: 807ms;\n    }\n    &:nth-child(4) {\n      height: 2px;\n      animation-duration: 858ms;\n    }\n    &:nth-child(5) {\n      height: 2px;\n      animation-duration: 800ms;\n    }\n  }\n}","$white: #E5E5E5;\n\n$marge: 80px;","/* Recommended styles for Splitting */\n.splitting .word,\n.splitting .char {\n  display: inline-block;\n}\n\n/* Psuedo-element chars */\n.splitting .char {\n  position: relative;\n}\n\n/**\n * Populate the psuedo elements with the character to allow for expanded effects\n * Set to `display: none` by default; just add `display: block` when you want\n * to use the psuedo elements\n */\n.splitting .char::before,\n.splitting .char::after {\n  content: attr(data-char);\n  position: absolute;\n  top: 0;\n  left: 0;\n  visibility: hidden;\n  transition: inherit;\n  user-select: none;\n}\n\n/* Expanded CSS Variables */\n\n.splitting {\n  /* The center word index */\n  --word-center: calc((var(--word-total) - 1) / 2);\n\n  /* The center character index */\n  --char-center: calc((var(--char-total) - 1) / 2);\n\n  /* The center character index */\n  --line-center: calc((var(--line-total) - 1) / 2);\n}\n\n.splitting .word {\n  /* Pecent (0-1) of the word's position */\n  --word-percent: calc(var(--word-index) / var(--word-total));\n\n  /* Pecent (0-1) of the line's position */\n  --line-percent: calc(var(--line-index) / var(--line-total));\n}\n\n.splitting .char {\n  /* Percent (0-1) of the char's position */\n  --char-percent: calc(var(--char-index) / var(--char-total));\n\n  /* Offset from center, positive & negative */\n  --char-offset: calc(var(--char-index) - var(--char-center));\n\n  /* Absolute distance from center, only positive */\n  --distance: calc(\n     (var(--char-offset) * var(--char-offset)) / var(--char-center)\n  );\n\n  /* Distance from center where -1 is the far left, 0 is center, 1 is far right */\n  --distance-sine: calc(var(--char-offset) / var(--char-center));\n\n  /* Distance from center where 1 is far left/far right, 0 is center */\n  --distance-percent: calc((var(--distance) / var(--char-center)));\n}\n",".splitting.cells img { width: 100%; display: block; }\n\n@supports ( display: grid ) {\n  .splitting.cells {\n    position: relative;\n    overflow: hidden;\n    background-size: cover;\n    visibility: hidden;\n  }\n\n  .splitting .cell-grid {\n    background: inherit;\n    position: absolute;\n    top: 0; \n    left: 0; \n    width: 100%; \n    height: 100%;\n    display: grid;\n    grid-template: repeat( var(--row-total), 1fr ) / repeat( var(--col-total), 1fr );\n  }\n\n  .splitting .cell {\n    background: inherit;\n    position: relative;\n    overflow: hidden;\n  }\n\n  .splitting .cell-inner {\n    background: inherit;\n    position: absolute;\n    visibility: visible;\n    /* Size to fit the whole container size */\n    width: calc(100% * var(--col-total));\n    height: calc(100% * var(--row-total));\n    /* Position properly */\n    left: calc(-100% * var(--col-index));\n    top: calc(-100% * var(--row-index));\n  }\n\n  /* Helper variables for advanced effects */\n  .splitting .cell {\n    --center-x: calc((var(--col-total) - 1) / 2);\n    --center-y: calc((var(--row-total) - 1) / 2);\n\n    /* Offset from center, positive & negative */\n    --offset-x: calc(var(--col-index) - var(--center-x));\n    --offset-y: calc(var(--row-index) - var(--center-y));\n\n    /* Absolute distance from center, only positive */\n    --distance-x: calc( (var(--offset-x) * var(--offset-x)) / var(--center-x) );\n\n    /* Absolute distance from center, only positive */\n    --distance-y: calc( (var(--offset-y) * var(--offset-y)) / var(--center-y) );\n  }\n}\n\n","@import 'variables';\n\n.text {\n  &__container {\n    position: fixed;\n    z-index: 100;\n    top: $marge;\n    left: $marge;\n    width: 45vw;\n    display: flex;\n    flex-direction: column;\n    &.leave {\n      .splitting .char, :after {\n        animation: fade-out .6s cubic-bezier(.5, 0, .5, 1) both;\n        animation-delay: calc(1ms * var(--char-index) + 300ms );\n      }\n    }\n    h2, p {\n      color: $white;\n    }\n    h2 {\n      font-family: 'Silk';\n      font-size: 70px;\n      line-height: 70px;\n      padding-bottom: 20px;\n      word-break: normal;\n      word-spacing: 100vw;\n      pointer-events: none;\n    }\n    h2:after {\n      content: url(../images/close.svg);\n      padding-left: 20px;\n      pointer-events: all;\n    }\n    p {\n      font-size: 16px;\n      line-height: 28px;\n      letter-spacing: 5%;\n    }\n    .splitting .char, :after {\n      animation: slide-in .7s cubic-bezier(.5, 0, .5, 1) both;\n      animation-delay: calc(3ms * var(--char-index) + 1000ms );\n    }\n    :after {\n      animation-delay: 1000ms;\n    }\n  }\n}\n\n\n@keyframes slide-in {\n  from {\n    transform: translateY(1.5em);\n    opacity: 0;\n  }\n}\n\n@keyframes fade-out {\n  to {\n    opacity: 0;\n  }\n}"]}